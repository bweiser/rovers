/* Auto-generated by genmsg_cpp for file /opt/planetxrobots/ros/DirectionButtons/srv/Lamp.srv */
#ifndef DIRECTIONBUTTONS_SERVICE_LAMP_H
#define DIRECTIONBUTTONS_SERVICE_LAMP_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace DirectionButtons
{
template <class ContainerAllocator>
struct LampRequest_ : public ros::Message
{
  typedef LampRequest_<ContainerAllocator> Type;

  LampRequest_()
  : lampStates(0)
  {
  }

  LampRequest_(const ContainerAllocator& _alloc)
  : lampStates(0)
  {
  }

  typedef int8_t _lampStates_type;
  int8_t lampStates;


private:
  static const char* __s_getDataType_() { return "DirectionButtons/LampRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "38ff04af46162785e68361a6401bd387"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "72b2d4e139920609dcfb8d877267a3c7"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
int8 lampStates\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, lampStates);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, lampStates);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(lampStates);
    return size;
  }

  typedef boost::shared_ptr< ::DirectionButtons::LampRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::DirectionButtons::LampRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct LampRequest
typedef  ::DirectionButtons::LampRequest_<std::allocator<void> > LampRequest;

typedef boost::shared_ptr< ::DirectionButtons::LampRequest> LampRequestPtr;
typedef boost::shared_ptr< ::DirectionButtons::LampRequest const> LampRequestConstPtr;


template <class ContainerAllocator>
struct LampResponse_ : public ros::Message
{
  typedef LampResponse_<ContainerAllocator> Type;

  LampResponse_()
  : succeeded(false)
  {
  }

  LampResponse_(const ContainerAllocator& _alloc)
  : succeeded(false)
  {
  }

  typedef uint8_t _succeeded_type;
  uint8_t succeeded;


private:
  static const char* __s_getDataType_() { return "DirectionButtons/LampResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "95e696a0d10686913abb262e0b4cbbcf"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "72b2d4e139920609dcfb8d877267a3c7"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
bool succeeded\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, succeeded);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, succeeded);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(succeeded);
    return size;
  }

  typedef boost::shared_ptr< ::DirectionButtons::LampResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::DirectionButtons::LampResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct LampResponse
typedef  ::DirectionButtons::LampResponse_<std::allocator<void> > LampResponse;

typedef boost::shared_ptr< ::DirectionButtons::LampResponse> LampResponsePtr;
typedef boost::shared_ptr< ::DirectionButtons::LampResponse const> LampResponseConstPtr;

struct Lamp
{

typedef LampRequest Request;
typedef LampResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct Lamp
} // namespace DirectionButtons

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::DirectionButtons::LampRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "38ff04af46162785e68361a6401bd387";
  }

  static const char* value(const  ::DirectionButtons::LampRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x38ff04af46162785ULL;
  static const uint64_t static_value2 = 0xe68361a6401bd387ULL;
};

template<class ContainerAllocator>
struct DataType< ::DirectionButtons::LampRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "DirectionButtons/LampRequest";
  }

  static const char* value(const  ::DirectionButtons::LampRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::DirectionButtons::LampRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
\n\
int8 lampStates\n\
\n\
\n\
";
  }

  static const char* value(const  ::DirectionButtons::LampRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::DirectionButtons::LampRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::DirectionButtons::LampResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "95e696a0d10686913abb262e0b4cbbcf";
  }

  static const char* value(const  ::DirectionButtons::LampResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x95e696a0d1068691ULL;
  static const uint64_t static_value2 = 0x3abb262e0b4cbbcfULL;
};

template<class ContainerAllocator>
struct DataType< ::DirectionButtons::LampResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "DirectionButtons/LampResponse";
  }

  static const char* value(const  ::DirectionButtons::LampResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::DirectionButtons::LampResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
bool succeeded\n\
\n\
\n\
";
  }

  static const char* value(const  ::DirectionButtons::LampResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::DirectionButtons::LampResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::DirectionButtons::LampRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.lampStates);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LampRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::DirectionButtons::LampResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.succeeded);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct LampResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<DirectionButtons::Lamp> {
  static const char* value() 
  {
    return "72b2d4e139920609dcfb8d877267a3c7";
  }

  static const char* value(const DirectionButtons::Lamp&) { return value(); } 
};

template<>
struct DataType<DirectionButtons::Lamp> {
  static const char* value() 
  {
    return "DirectionButtons/Lamp";
  }

  static const char* value(const DirectionButtons::Lamp&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<DirectionButtons::LampRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "72b2d4e139920609dcfb8d877267a3c7";
  }

  static const char* value(const DirectionButtons::LampRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<DirectionButtons::LampRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "DirectionButtons/Lamp";
  }

  static const char* value(const DirectionButtons::LampRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<DirectionButtons::LampResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "72b2d4e139920609dcfb8d877267a3c7";
  }

  static const char* value(const DirectionButtons::LampResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<DirectionButtons::LampResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "DirectionButtons/Lamp";
  }

  static const char* value(const DirectionButtons::LampResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // DIRECTIONBUTTONS_SERVICE_LAMP_H

